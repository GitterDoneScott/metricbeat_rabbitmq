version: '2.1'

services:

#########################################################
####                    LOGGING                      ####
#########################################################

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:6.5.0
    volumes:
      - ./metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml
      - /proc:/hostfs/proc:ro
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock
#      - metricbeat:/usr/share/metricbeat/data
    environment:
      - ELASTICSEARCH_HOST=elasticsearch
      - KIBANA_HOST=kibana
    restart: always
    user: root
    labels:
      container_group: logging
###############################################################
  # Runs on your node(s) and forwards all logs to Logstash.
  filebeat:
    image: docker.elastic.co/beats/filebeat:6.5.0
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/log:/host-logs
    restart: always
    user: root
    labels:
      container_group: logging

#########################################################

  # Storage and search backend. Gets all logs from Logstash and is the backend that Kibana runs on.
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.0
    expose:
      - 9200
    ports:
      - 9200:9200
    restart: always
    command: elasticsearch -Etransport.host=127.0.0.1 -Ebootstrap.memory_lock=false
    labels:
      container_group: logging
    networks:
      default:
        aliases:
          - elasticsearchhost # Required for elastalert.
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m

#########################################################

  # Takes care of piling piling up Elasticsearch indices/logs. Can do many other things as well.

  curator:
    image: stefanprodan/es-curator-cron
    environment:
      - "PERIOD=15min"
      - "KEEP_DAYS=5"
      - "INDEX_PREFIX='(?:metricbeat|filebeat)'"
    command: "--host elasticsearch --port 9200"
    labels:
      container_group: logging

#########################################################

  # Pretty frontend to explore and check out all your logs.
  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.0
    ports:
      - 5601:5601
    expose:
      - 5601
    restart: always
    labels:
      container_group: logging
    environment:
      - NODE_OPTIONS=--max-old-space-size=4096 #Elastalert needs more memory to install plugin 

#########################################################

 # Tool to run queries against your Elasticsearch and when alert when finding certain logs.
  elastalert:
    image: bitsensor/elastalert:1.0.0 
    restart: always
    ports:
      - "3030:3030"
    volumes:
      - ./elastalert/config/elastalert.yaml:/opt/elastalert/config.yaml
      - ./elastalert/config/config.json:/opt/elastalert-server/config/config.json
      - ./elastalert/rules:/opt/elastalert/rules
      - ./elastalert/rule_templates:/opt/elastalert/rule_templates
    labels:
      container_group: monitoring
########################################################

  rabbitmq:
    image: rabbitmq:3.7.3-management-alpine
    container_name: rabbitmq
    ports:
      - 8080:15672
      - 5672:5672
    expose:
      - 15672  #mgmt
      - 5672   #amqp
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - default

#########################################################      
      
  perf-test:
    image: pivotalrabbitmq/perf-test:latest
    container_name: perf-test
    command: --uri amqp://rabbitmq --queue-pattern 'perf-test-%d' --queue-pattern-from 1 --queue-pattern-to 500 --producers 500 --consumers 1500 --rate 500 --consumer-rate 50
    networks:
      - default

